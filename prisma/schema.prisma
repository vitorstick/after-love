generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String       @id @default(uuid()) @map("id")
  email            String       @unique @map("email")
  passwordHash     String       @map("password_hash")
  name             String?      @map("name")
  createdAt        DateTime     @default(now()) @map("created_at")
  updatedAt        DateTime     @updatedAt @map("updated_at")
  coupleId         String?      @map("couple_id")
  coupleAsPartner1 Couple?      @relation("Partner1Couple")
  coupleAsPartner2 Couple?      @relation("Partner2Couple")
  invitationsSent  Invitation[] @relation("InviterInvitations")
  couple           Couple?      @relation(fields: [coupleId], references: [id])

  @@map("users")
}

model Couple {
  id            String      @id @default(uuid()) @map("id")
  partner1Id    String      @unique @map("partner1_id")
  partner2Id    String?     @unique @map("partner2_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  establishedAt DateTime?   @map("established_at")
  partner1      User        @relation("Partner1Couple", fields: [partner1Id], references: [id])
  partner2      User?       @relation("Partner2Couple", fields: [partner2Id], references: [id])
  invitation    Invitation?
  users         User[]

  @@map("couples")
}

model Invitation {
  id            String           @id @default(uuid()) @map("id")
  inviterUserId String           @map("inviter_user_id")
  coupleId      String           @unique @map("couple_id")
  invitedEmail  String           @map("invited_email")
  token         String           @unique
  status        InvitationStatus @default(PENDING)
  createdAt     DateTime         @default(now()) @map("created_at")
  expiresAt     DateTime         @map("expires_at")
  acceptedAt    DateTime?        @map("accepted_at")
  couple        Couple           @relation(fields: [coupleId], references: [id], onDelete: Cascade)
  inviter       User             @relation("InviterInvitations", fields: [inviterUserId], references: [id])

  @@map("invitations")
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  EXPIRED
  CANCELLED
}
